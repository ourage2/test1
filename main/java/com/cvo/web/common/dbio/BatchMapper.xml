<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="batch">

	<!-- 첨부파일정리 대상 조회 -->
	<select id="fileDelTargetList" parameterType="map" resultType="box">
		SELECT
			  FILE_SEQ
			, FILE_NM
			, SAVE_FILE_PATH
		FROM TB_FILE
		WHERE (
				(FILE_DIV = 'NOTICE' AND FILE_KEY NOT IN (SELECT SEQ FROM TB_NOTICE WHERE DEL_YN = 'N'))
				OR (FILE_DIV = 'QNA' AND FILE_KEY NOT IN (SELECT SEQ FROM TB_QNA WHERE DEL_YN = 'N'))
			  )
		AND INSERT_DT &lt; GETDATE() - 1
	</select>

	<!-- 첨부파일정리 대상 삭제-->
	<update id="fileDelDelete" parameterType="map">
		DELETE FROM TB_FILE
		WHERE (
				(FILE_DIV = 'NOTICE' AND FILE_KEY NOT IN (SELECT SEQ FROM TB_NOTICE WHERE DEL_YN = 'N'))
				OR (FILE_DIV = 'QNA' AND FILE_KEY NOT IN (SELECT SEQ FROM TB_QNA WHERE DEL_YN = 'N'))
			  )
		AND INSERT_DT &lt; GETDATE() - 1
	</update>

	<!-- 차량 RAW 데이터 삭제-->
	<update id="carRawDelete" parameterType="map">
		DELETE FROM TB_CAR_HIST
		WHERE DEV_DT &lt;= CONVERT(varchar(20), GETDATE() - #{delDay}, 112)
	</update>

	<!-- 창고온도 RAW 데이터 삭제-->
	<update id="cargoRawDelete" parameterType="map">
		DELETE FROM TB_CARGO_HIST
		WHERE DEV_DT &lt;= CONVERT(varchar(20), GETDATE() - #{delDay}, 112)
	</update>

	<!-- 미등록 차량 데이터 삭제-->
	<update id="noregCarDelete" parameterType="map">
		DELETE FROM TB_CAR_NOREG_HIST
		WHERE INSERT_DT &lt;= CONVERT(varchar(20), GETDATE() - #{delDay}, 112)
	</update>

	<!-- 미등록 대리점 데이터 삭제-->
	<update id="noregAgentDelete" parameterType="map">
		DELETE FROM TB_AGENT_NOREG_HIST
		WHERE INSERT_DT &lt;= CONVERT(varchar(20), GETDATE() - #{delDay}, 112)
	</update>

	<!-- 창고통계 삭제-->
	<delete id="cargoStatDelete" parameterType="map">
		DELETE FROM TB_CARGO_STAT
		WHERE STD_DATE &gt;= CAST(GETDATE() - #{daysAgo} AS DATE)
		AND STD_DATE &lt;= CAST(GETDATE() - 1 AS DATE)
	</delete>

	<!-- 창고통계 등록 -->
	<insert id="cargoStatInsert" parameterType="map">
		INSERT INTO TB_CARGO_STAT (
			  STD_DATE
			, DEV_ID
			, INSERT_ID
		<if test='div != null and div == "C"'>
			, CENTER_CD
		</if>
		<if test='div != null and div == "A"'>
			, AGENT_CD
		</if>
			, WEEKEND_YN
			, TOT_CNT
			, NOR_CNT
			, VIO_LONG_CNT
			, VIO_CNT
			, NOR_RT
			, INPUT_VIO_CNT
		)
		SELECT
			  STD_DATE
			, DEV_ID
			, 'BATCH'
		<if test='div != null and div == "C"'>
			, CENTER_CD
		</if>
		<if test='div != null and div == "A"'>
			, AGENT_CD
		</if>
			, IIF(DATEPART(WEEKDAY, STD_DATE) IN (1, 7), 'Y', 'N') AS WEEKEND_YN
			, TOT_CNT
			, NOR_CNT
			, ISNULL(VIO_LONG_CNT, 0)
			, TOT_CNT - NOR_CNT
			, IIF(TOT_CNT = 0 , 0, NOR_CNT * 100.0 / TOT_CNT) AS RT
			, INPUT_VIO_CNT
		FROM (
			SELECT
				  CAST(B.DEV_DT AS DATE) AS STD_DATE
				, A.DEV_ID
			<if test='div != null and div == "C"'>
				, A.CENTER_CD
			</if>
			<if test='div != null and div == "A"'>
				, A.AGENT_CD
			</if>
				, COUNT(*) AS TOT_CNT
				, SUM(IIF(C1.VIO_CNT IS NULL, 1, 0)) AS NOR_CNT
				, SUM(IIF(C1.VIO_CNT >= 50, C1.VIO_LONG_CNT, 0)) AS VIO_LONG_CNT
				, SUM(IIF(B.TEMP_VIO_CD IS NULL, 0, 1)) AS INPUT_VIO_CNT
			FROM TB_CARGO_DEV A WITH (NOLOCK)
			INNER JOIN TB_CARGO_HIST B WITH (NOLOCK)
				ON B.DEV_ID = A.DEV_ID
				AND B.USE_YN = 'Y'
			LEFT OUTER JOIN TB_CARGO_TEMP_VIO C1 WITH (NOLOCK)
				ON C1.DEV_ID = B.DEV_ID
				AND C1.DEV_DT = B.DEV_DT
				AND C1.EVT_FLAG = '1'
			WHERE DATEDIFF(DAY, GETDATE(), B.DEV_DT) &gt;= -#{daysAgo}
			AND DATEDIFF(DAY, GETDATE(), B.DEV_DT) &lt;= -1
		    AND A.USE_YN = 'Y'
		<if test='div != null and div == "C"'>
			AND A.CENTER_CD IS NOT NULL
			GROUP BY CAST(B.DEV_DT AS DATE), A.DEV_ID, A.CENTER_CD
		</if>
		<if test='div != null and div == "A"'>
			AND A.CENTER_CD IS NULL
			GROUP BY CAST(B.DEV_DT AS DATE), A.DEV_ID, A.AGENT_CD
		</if>
		) X
	</insert>

	<sql id="carStatVariable">
		DECLARE @STR_DT DATETIME;
		DECLARE @END_DT DATETIME;
		<choose>
			<when test='srtDt != null and srtDt != "" and endDt != null and endDt != ""'>
				SET @STR_DT = CAST(#{srtDt} AS DATETIME);
				SET @END_DT = CAST(#{endDt} AS DATETIME) + 1;
			</when>
			<otherwise>
				SET @STR_DT = CAST(CONVERT(VARCHAR, GETDATE() - #{daysAgo}, 112) AS DATETIME);
				SET @END_DT = CAST(CONVERT(VARCHAR, GETDATE(), 112) AS DATETIME);
			</otherwise>
		</choose>
	</sql>

	<sql id="carStatCte">
		<include refid="carStatVariable"/>

		WITH REST1 AS (
			SELECT
				 CAST(@STR_DT AS DATE) AS REST_DATE
				,DATEPART(DAY, @STR_DT) AS REST_DAY
				,CONVERT(VARCHAR(6), @STR_DT, 112) AS STD_YM

			UNION ALL
			SELECT
				 DATEADD(DAY, 1, REST_DATE) AS REST_DATE
				,DATEPART(DAY, DATEADD(DAY, 1, REST_DATE)) AS REST_DAY
				,CONVERT(VARCHAR(6), DATEADD(DAY, 1, REST_DATE), 112) AS STD_YM
			FROM REST1 A
			WHERE DATEADD(DAY, 1, REST_DATE) &lt; CAST(@END_DT AS DATE)
		)
		,REST2 AS (
			SELECT
				 A.CAR_ID
				,A.STD_YM
				,B.REST_DATE
				,CASE B.REST_DAY
					WHEN 1 THEN DAY1
					WHEN 2 THEN DAY2
					WHEN 3 THEN DAY3
					WHEN 4 THEN DAY4
					WHEN 5 THEN DAY5
					WHEN 6 THEN DAY6
					WHEN 7 THEN DAY7
					WHEN 8 THEN DAY8
					WHEN 9 THEN DAY9
					WHEN 10 THEN DAY10
					WHEN 11 THEN DAY11
					WHEN 12 THEN DAY12
					WHEN 13 THEN DAY13
					WHEN 14 THEN DAY14
					WHEN 15 THEN DAY15
					WHEN 16 THEN DAY16
					WHEN 17 THEN DAY17
					WHEN 18 THEN DAY18
					WHEN 19 THEN DAY19
					WHEN 20 THEN DAY20
					WHEN 21 THEN DAY21
					WHEN 22 THEN DAY22
					WHEN 23 THEN DAY23
					WHEN 24 THEN DAY24
					WHEN 25 THEN DAY25
					WHEN 26 THEN DAY26
					WHEN 27 THEN DAY27
					WHEN 28 THEN DAY28
					WHEN 29 THEN DAY29
					WHEN 30 THEN DAY30
					WHEN 31 THEN DAY31
				END AS REST_CD
			FROM TB_CAR_REST A
			INNER JOIN REST1 B
				ON B.STD_YM = A.STD_YM
		)
	</sql>

	<delete id="carStatDelete" parameterType="map">
		<include refid="carStatVariable"/>
		DELETE FROM TB_CAR_STAT
		WHERE STD_DATE &gt;= @STR_DT
		AND STD_DATE &lt; @END_DT
	</delete>

	<insert id="carBaseStatInsert" parameterType="map">
		<include refid="carStatCte"/>
		, RANGE1 AS (
			SELECT
				 CAST(@STR_DT AS DATE) AS STD_DATE
			UNION ALL
			SELECT
				 DATEADD(DAY, 1, STD_DATE) AS REST_DATE
			FROM RANGE1 A
			WHERE DATEADD(DAY, 1, STD_DATE) &lt; CAST(@END_DT AS DATE)
		)
		, RANGE2 AS (
			SELECT
				  A.STD_DATE
				, A.CAR_ID
				, 'D' AS BIZ_CD
				, A.CENTER_CD
				, ISNULL(B.REST_CD, 'N') AS REST_CD
				, IIF(DATEPART(WEEKDAY, A.STD_DATE) IN (1, 7), 'Y', 'N') AS WEEKEND_YN
			FROM (
				SELECT
					  B.STD_DATE
					, A.CAR_ID
					, A.CENTER_CD
				FROM TB_CAR A WITH(NOLOCK)
				CROSS JOIN RANGE1 B
				WHERE A.CENTER_CD IS NOT NULL
				AND A.USE_YN = 'Y'
		    	AND (A.CAR_TID LIKE '012%' OR A.RENT_YN = 'Y')
			    AND A.CAR_NO IS NOT NULL
			) A
			LEFT OUTER JOIN REST2 B
			ON B.CAR_ID = A.CAR_ID
			AND B.REST_DATE = A.STD_DATE
		)
		MERGE TB_CAR_STAT A
		USING RANGE2 B
			ON B.STD_DATE = A.STD_DATE
			AND B.CAR_ID = A.CAR_ID
			AND B.BIZ_CD = A.BIZ_CD
			AND B.CENTER_CD = A.CENTER_CD
		WHEN NOT MATCHED THEN
			INSERT (
				  STD_DATE
				, CAR_ID
				, BIZ_CD
				, INSERT_ID
				, CENTER_CD
				, WEEKEND_YN
				, REST_CD
			)
			VALUES (
				  B.STD_DATE
				, B.CAR_ID
				, B.BIZ_CD
				, 'BATCH'
				, B.CENTER_CD
				, B.WEEKEND_YN
				, B.REST_CD
			)
		WHEN MATCHED THEN
			UPDATE SET
				  UPDATE_DT = GETDATE()
				, UPDATE_ID = 'BATCH'
				, REST_CD = B.REST_CD
			;
	</insert>

	<!-- 차량온도통계 등록 -->
	<insert id="carTempStatInsert" parameterType="map">
		<include refid="carStatCte"/>
		,TEMP1 AS (
			SELECT
				  CAST(A.DELIY_DT AS DATE) AS STD_DATE
				, A.SHIP_NO
				, A.CAR_ID
				, B.BIZ_CD
				, C.CENTER_CD
				, MIN(
					CASE
						WHEN D.ZONE_TYPE = '1' THEN D.START_DT
						WHEN D.ZONE_TYPE = '2' THEN ISNULL(D.ARR_DT, D.START_DT)
					END
				  ) AS MIN_DT
				, MAX(
					CASE
						WHEN D.ZONE_TYPE = '2' AND A.DELIY_DIV = '1' THEN D.ARR_DT
						WHEN D.ZONE_TYPE = '2' AND A.DELIY_DIV = '3' THEN A.DELIY_DT
						WHEN D.ZONE_TYPE = '2'
							THEN
								CASE
									WHEN D.ARR_DT > A.DELIY_DT THEN D.ARR_DT
									ELSE A.DELIY_DT
								END
					END
				  ) AS MAX_DT
			FROM TB_DELI A WITH (NOLOCK)
			INNER JOIN TB_DELI_DTL B WITH (NOLOCK)
				ON B.SHIP_NO = A.SHIP_NO
				AND B.BIZ_CD IS NOT NULL
			INNER JOIN TB_CAR C WITH(NOLOCK)
				ON C.CAR_ID = A.CAR_ID
				AND C.USE_YN = 'Y'
				AND C.CENTER_CD IS NOT NULL
				AND (C.CAR_TID LIKE '012%' OR C.RENT_YN = 'Y')
				AND C.CAR_NO IS NOT NULL
			INNER JOIN TB_CAR_ZONE_IO D WITH(NOLOCK)
				ON D.SHIP_NO = B.SHIP_NO
			LEFT OUTER JOIN REST2 E
				ON DATEDIFF(DAY, E.REST_DATE, A.DELIY_DT) = 0
				AND E.CAR_ID = A.CAR_ID
			WHERE A.DELIY_DT >= @STR_DT
			AND A.DELIY_DT &lt; @END_DT
			AND (
				(D.ZONE_TYPE = '1' AND DATEDIFF(DAY, A.DELIY_DT, D.START_DT) = 0)
				OR (D.ZONE_TYPE IN ('2') AND DATEDIFF(DAY, A.DELIY_DT, D.ARR_DT) = 0)
			)
			AND ISNULL(E.REST_CD, 'N') = 'N'
			AND B.BIZ_CD IS NOT NULL
			GROUP BY A.CAR_ID, A.SHIP_NO, B.BIZ_CD, CAST(A.DELIY_DT AS DATE), C.CENTER_CD
		)
		,TEMP2 AS (
			SELECT
				  A.STD_DATE
				, A.CAR_ID
				, A.BIZ_CD
				, A.CENTER_CD
				, B.TEMP_TOT_CNT
				, IIF(ISNULL(B.TEMP_VIO_LONG_CNT, 0) > B.TEMP_TOT_CNT, 0, B.TEMP_TOT_CNT - ISNULL(B.TEMP_VIO_LONG_CNT, 0)) AS TEMP_NOR_CNT
				, IIF(ISNULL(B.TEMP_HACCP_VIO_LONG_CNT, 0) > B.TEMP_TOT_CNT, 0, B.TEMP_TOT_CNT - ISNULL(B.TEMP_HACCP_VIO_LONG_CNT, 0)) AS TEMP_HACCP_NOR_CNT
				, ISNULL(B.TEMP_VIO_LONG_CNT, 0) AS TEMP_VIO_LONG_CNT
				, ISNULL(B.TEMP_HACCP_VIO_LONG_CNT, 0) AS TEMP_HACCP_VIO_LONG_CNT
				, B.INPUT_TEMP_VIO_CNT
				, B.INPUT_ARR_VIO_CNT
			FROM (
				SELECT
					  A.STD_DATE
					, A.CAR_ID
					, A.BIZ_CD
					, A.CENTER_CD
				FROM TEMP1 A
				WHERE 1 = 1
				AND DATEDIFF(DAY, A.STD_DATE, A.MIN_DT) = 0
				AND DATEDIFF(DAY, A.STD_DATE, A.MAX_DT) = 0
				GROUP BY A.STD_DATE, A.CAR_ID, A.BIZ_CD, A.CENTER_CD
			) A
			INNER JOIN (
				SELECT
					  CAST(BB.DEV_DT AS DATE) AS STD_DATE
					, BB.CAR_ID
					, COUNT(*) / 5 AS TEMP_TOT_CNT
					/*, SUM(IIF(DD1.VIO_CNT IS NULL, 1, 0)) AS TEMP_NOR_CNT*/
					/*, SUM(IIF(DD2.VIO_CNT IS NULL, 1, 0)) AS TEMP_HACCP_NOR_CNT*/
					, SUM(DD1.VIO_LONG_CNT) AS TEMP_VIO_LONG_CNT
					, SUM(DD2.VIO_LONG_CNT) AS TEMP_HACCP_VIO_LONG_CNT
					, SUM(IIF(BB.TEMP_VIO_CD IS NULL, 0, 1)) AS INPUT_TEMP_VIO_CNT
					, SUM(IIF(BB.ARR_VIO_CD IS NULL, 0, 1)) AS INPUT_ARR_VIO_CNT
				FROM TB_CAR_HIST BB WITH (NOLOCK)
				LEFT OUTER JOIN TB_CAR_TEMP_VIO DD1 WITH (NOLOCK)
					ON DD1.CAR_ID = BB.CAR_ID
					AND DD1.DEV_DT = BB.DEV_DT
					AND DD1.EVT_FLAG = '1'
				LEFT OUTER JOIN TB_CAR_TEMP_VIO DD2 WITH (NOLOCK)
					ON DD2.CAR_ID = BB.CAR_ID
					AND DD2.DEV_DT = BB.DEV_DT
					AND DD2.EVT_FLAG = '2'
				WHERE BB.USE_YN = 'Y'
				AND BB.LOG_DIV = 'D'
				AND EXISTS (
					SELECT 1
					FROM TEMP1 Z
					WHERE Z.CAR_ID = BB.CAR_ID
					AND Z.MIN_DT &lt;= BB.DEV_DT
					AND Z.MAX_DT >= BB.DEV_DT
					AND DATEDIFF(DAY, Z.STD_DATE, Z.MIN_DT) = 0
					AND DATEDIFF(DAY, Z.STD_DATE, Z.MAX_DT) = 0
				)
				GROUP BY CAST(BB.DEV_DT AS DATE), BB.CAR_ID
			) B
				ON B.CAR_ID = A.CAR_ID
				AND B.STD_DATE = A.STD_DATE
		)
		,TEMP3 AS (
			SELECT
				  STD_DATE
				, CAR_ID
				, BIZ_CD
				, CENTER_CD
				, TEMP_TOT_CNT
				, TEMP_NOR_CNT
				, TEMP_VIO_LONG_CNT
				, IIF(TEMP_TOT_CNT = 0, 0, TEMP_NOR_CNT * 100.0 / TEMP_TOT_CNT) AS TEMP_NOR_RT
				, TEMP_HACCP_NOR_CNT
				, TEMP_HACCP_VIO_LONG_CNT
				, IIF(TEMP_TOT_CNT = 0, 0, TEMP_HACCP_NOR_CNT * 100.0 / TEMP_TOT_CNT) AS TEMP_HACCP_NOR_RT
				, IIF(DATEPART(WEEKDAY, STD_DATE) IN (1, 7), 'Y', 'N') AS WEEKEND_YN
				, X.INPUT_TEMP_VIO_CNT
				, X.INPUT_ARR_VIO_CNT
			FROM TEMP2 X
		)
		MERGE TB_CAR_STAT A
		USING TEMP3 B
			ON B.STD_DATE = A.STD_DATE
			AND B.CAR_ID = A.CAR_ID
			AND B.BIZ_CD = A.BIZ_CD
			AND B.CENTER_CD = A.CENTER_CD
		WHEN NOT MATCHED THEN
			INSERT (
				  STD_DATE
				, CAR_ID
				, BIZ_CD
				, INSERT_ID
				, CENTER_CD
				<!-- , AGENT_CD -->
				, WEEKEND_YN
				, TEMP_TOT_CNT
				, TEMP_NOR_CNT
				, TEMP_VIO_LONG_CNT
				<!-- , TEMP_VIO_CNT -->
				, TEMP_NOR_RT
				, TEMP_HACCP_NOR_CNT
				, TEMP_HACCP_VIO_LONG_CNT
				<!-- , TEMP_HACCP_VIO_CNT -->
				, TEMP_HACCP_NOR_RT
				, INPUT_TEMP_VIO_CNT
				, INPUT_ARR_VIO_CNT
			)
			VALUES (
				  B.STD_DATE
				, B.CAR_ID
				, B.BIZ_CD
				, 'BATCH'
				, B.CENTER_CD
				<!-- , B.AGENT_CD -->
				, B.WEEKEND_YN
				, B.TEMP_TOT_CNT
				, B.TEMP_NOR_CNT
				, B.TEMP_VIO_LONG_CNT
				<!-- , B.TEMP_VIO_CNT -->
				, B.TEMP_NOR_RT
				, B.TEMP_HACCP_NOR_CNT
				, B.TEMP_HACCP_VIO_LONG_CNT
				<!-- , B.TEMP_HACCP_VIO_CNT -->
				, B.TEMP_HACCP_NOR_RT
				, ISNULL(B.INPUT_TEMP_VIO_CNT, 0)
				, ISNULL(B.INPUT_ARR_VIO_CNT, 0)
			)
		WHEN MATCHED THEN
			UPDATE SET
				  UPDATE_DT = GETDATE()
				, UPDATE_ID = 'BATCH'
				, TEMP_TOT_CNT = B.TEMP_TOT_CNT
				, TEMP_NOR_CNT = B.TEMP_NOR_CNT
				, TEMP_VIO_LONG_CNT = B.TEMP_VIO_LONG_CNT
				<!-- , TEMP_VIO_CNT = B.TEMP_VIO_CNT -->
				, TEMP_NOR_RT = B.TEMP_NOR_RT
				, TEMP_HACCP_NOR_CNT = B.TEMP_HACCP_NOR_CNT
			    , TEMP_HACCP_VIO_LONG_CNT = B.TEMP_HACCP_VIO_LONG_CNT
				<!-- , TEMP_HACCP_VIO_CNT = B.TEMP_HACCP_VIO_CNT -->
				, TEMP_HACCP_NOR_RT = B.TEMP_HACCP_NOR_RT
				, INPUT_TEMP_VIO_CNT = ISNULL(B.INPUT_TEMP_VIO_CNT, 0)
				, INPUT_ARR_VIO_CNT = ISNULL(B.INPUT_ARR_VIO_CNT, 0)
		;
	</insert>

	<!-- 차량도착통계 등록 -->
	<insert id="carArrStatInsert" parameterType="map">
		<include refid="carStatCte"/>
		,ARR1 AS (
			SELECT
				  STD_DATE
				, CAR_ID
				, BIZ_CD
				, CENTER_CD
				, ARR_TOT_CNT
				, ARR_NOR_CNT
				, ARR_TOT_CNT - ARR_NOR_CNT AS ARR_VIO_CNT
				, IIF(ARR_TOT_CNT = 0, 0, ARR_NOR_CNT * 100.0 / ARR_TOT_CNT) AS ARR_NOR_RT
				, ARR_AGENT_NOR_CNT
				, ARR_TOT_CNT - ARR_AGENT_NOR_CNT AS ARR_AGENT_VIO_CNT
				, IIF(ARR_TOT_CNT = 0, 0, ARR_AGENT_NOR_CNT * 100.0 / ARR_TOT_CNT) AS ARR_AGENT_NOR_RT
				, IIF(DATEPART(WEEKDAY, STD_DATE) IN (1, 7), 'Y', 'N') AS WEEKEND_YN
			FROM (
				SELECT
					  CAST(A.DELIY_DT AS DATE) AS STD_DATE
					, A.CAR_ID
					, B.BIZ_CD
					, F.CENTER_CD
					, COUNT(*) AS ARR_TOT_CNT
					, SUM(IIF(D.DELAY_YN = 'N', 1, 0)) AS ARR_NOR_CNT
					, SUM(IIF(D.AGENT_DELAY_YN = 'N', 1, 0)) AS ARR_AGENT_NOR_CNT
				FROM TB_DELI A WITH (NOLOCK)
				INNER JOIN TB_DELI_DTL B WITH (NOLOCK)
					ON B.SHIP_NO = A.SHIP_NO
				INNER JOIN TB_AGENT C WITH (NOLOCK)
					ON C.AGENT_CD = B.AGENT_CD
				INNER JOIN TB_CAR_ZONE_IO D WITH(NOLOCK)
					ON D.SHIP_NO = B.SHIP_NO
					AND D.AGENT_CD = B.AGENT_CD
					AND D.DELI_NO = B.DELI_NO
				LEFT OUTER JOIN REST2 E
					ON DATEDIFF(DAY, E.REST_DATE, A.DELIY_DT) = 0
					AND E.CAR_ID = A.CAR_ID
				INNER JOIN TB_CAR F WITH(NOLOCK)
					ON F.CAR_ID = A.CAR_ID
					AND F.USE_YN = 'Y'
					AND F.CENTER_CD IS NOT NULL
		    		AND (F.CAR_TID LIKE '012%' OR F.RENT_YN = 'Y')
					AND F.CAR_NO IS NOT NULL
				WHERE A.DELIY_DT &gt;= @STR_DT
				AND A.DELIY_DT &lt; @END_DT
				AND B.BIZ_CD IS NOT NULL
				AND ISNULL(E.REST_CD, 'N') = 'N'
		    	AND DATEDIFF(DAY, A.DELIY_DT, D.ARR_DT) = 0
				GROUP BY CAST(A.DELIY_DT AS DATE), A.CAR_ID, B.BIZ_CD, F.CENTER_CD
			) X
		)
		MERGE TB_CAR_STAT A
		USING ARR1 B
			ON B.STD_DATE = A.STD_DATE
			AND B.CAR_ID = A.CAR_ID
			AND B.BIZ_CD = A.BIZ_CD
			AND B.CENTER_CD = A.CENTER_CD
		WHEN NOT MATCHED THEN
			INSERT (
				  STD_DATE
				, CAR_ID
				, BIZ_CD
				, INSERT_ID
				, CENTER_CD
				, WEEKEND_YN
				, ARR_TOT_CNT
				, ARR_NOR_CNT
				, ARR_VIO_CNT
				, ARR_NOR_RT
				, ARR_AGENT_NOR_CNT
				, ARR_AGENT_VIO_CNT
				, ARR_AGENT_NOR_RT
			)
			VALUES (
				  B.STD_DATE
				, B.CAR_ID
				, B.BIZ_CD
				, 'BATCH'
				, B.CENTER_CD
				, B.WEEKEND_YN
				, B.ARR_TOT_CNT
				, B.ARR_NOR_CNT
				, B.ARR_VIO_CNT
				, B.ARR_NOR_RT
				, B.ARR_AGENT_NOR_CNT
				, B.ARR_AGENT_VIO_CNT
				, B.ARR_AGENT_NOR_RT
			)
		WHEN MATCHED THEN
			UPDATE SET
				  UPDATE_DT = GETDATE()
				, UPDATE_ID = 'BATCH'
				, ARR_TOT_CNT = B.ARR_TOT_CNT
				, ARR_NOR_CNT = B.ARR_NOR_CNT
				, ARR_VIO_CNT = B.ARR_VIO_CNT
				, ARR_NOR_RT = B.ARR_NOR_RT
				, ARR_AGENT_NOR_CNT = B.ARR_AGENT_NOR_CNT
				, ARR_AGENT_VIO_CNT = B.ARR_AGENT_VIO_CNT
				, ARR_AGENT_NOR_RT = B.ARR_AGENT_NOR_RT
		;
	</insert>

	<!-- 차량납품실적통계 등록 -->
	<insert id="carDeliStatInsert" parameterType="map">

		DECLARE @REST TABLE (
			CAR_ID VARCHAR(5),
			STD_YM VARCHAR(6),
			REST_DATE DATE,
			REST_CD VARCHAR(1)
		);

		DECLARE @DELI_PLAN TABLE (
			STD_DATE DATE,
			CAR_ID VARCHAR(5),
			BIZ_CD VARCHAR(1),
			CENTER_CD VARCHAR(20),
			DELI_PLAN_CNT INT
		);

		DECLARE @DELI_COMP TABLE(
			STD_DATE DATE,
			CAR_ID VARCHAR(5),
			BIZ_CD VARCHAR(1),
			CENTER_CD VARCHAR(20),
			SHIP_CNT INT,
			DELI_COMP_CNT INT,
			DELI_NOR_CNT NUMERIC(20, 10),
			DELI_VIO_CNT NUMERIC(20, 10)
		);

		<include refid="carStatCte"/>
		INSERT INTO @REST
		SELECT CAR_ID, STD_YM, REST_DATE, REST_CD
		FROM REST2;

		INSERT INTO @DELI_PLAN
		SELECT
			  A.SHIP_REQ_DATE AS STD_DATE
			, A.CAR_ID
			, B.BIZ_CD
			, D.CENTER_CD
			, COUNT(*) AS DELI_PLAN_CNT
		FROM TB_DELI A WITH (NOLOCK)
		INNER JOIN TB_DELI_DTL B WITH (NOLOCK)
			ON B.SHIP_NO = A.SHIP_NO
		INNER JOIN TB_CAR_ZONE_IO C WITH (NOLOCK)
			ON C.SHIP_NO = B.SHIP_NO
			AND C.AGENT_CD = B.AGENT_CD
			AND C.DELI_NO = B.DELI_NO
		INNER JOIN TB_CAR D WITH (NOLOCK)
			ON D.CAR_ID = A.CAR_ID
			AND D.USE_YN = 'Y'
			AND D.CENTER_CD IS NOT NULL
			AND (D.CAR_TID LIKE '012%' OR D.RENT_YN = 'Y')
			AND D.CAR_NO IS NOT NULL
		LEFT OUTER JOIN @REST E
			ON DATEDIFF(DAY, E.REST_DATE, A.SHIP_REQ_DATE) = 0
			AND E.CAR_ID = A.CAR_ID
		WHERE A.SHIP_REQ_DATE >= @STR_DT
		AND A.SHIP_REQ_DATE &lt; @END_DT
		AND B.BIZ_CD IS NOT NULL
		AND ISNULL(E.REST_CD, 'N') = 'N'
		GROUP BY A.SHIP_REQ_DATE, A.CAR_ID, B.BIZ_CD, D.CENTER_CD
		;

		INSERT INTO @DELI_COMP
		SELECT
			  CAST(A.DELIY_DT AS DATE) AS STD_DATE
			, A.CAR_ID
			, B.BIZ_CD
			, D.CENTER_CD
			, COUNT(DISTINCT A.SHIP_NO) AS SHIP_CNT
			, SUM(IIF(C.ARR_DT IS NOT NULL, 1, 0)) AS DELI_COMP_CNT
			, SUM(IIF(C.ARR_DT IS NOT NULL AND C.DELAY_YN = 'N', 1, 0)) AS DELI_NOR_CNT
			, SUM(IIF(C.ARR_DT IS NOT NULL AND C.DELAY_YN = 'Y', 1, 0)) AS DELI_VIO_CNT
		FROM TB_DELI A WITH (NOLOCK)
		INNER JOIN TB_DELI_DTL B WITH (NOLOCK)
			ON B.SHIP_NO = A.SHIP_NO
		INNER JOIN TB_CAR_ZONE_IO C WITH (NOLOCK)
			ON C.SHIP_NO = B.SHIP_NO
			AND C.AGENT_CD = B.AGENT_CD
			AND C.DELI_NO = B.DELI_NO
		INNER JOIN TB_CAR D WITH (NOLOCK)
			ON D.CAR_ID = A.CAR_ID
			AND D.USE_YN = 'Y'
			AND D.CENTER_CD IS NOT NULL
			AND (D.CAR_TID LIKE '012%' OR D.RENT_YN = 'Y')
			AND D.CAR_NO IS NOT NULL
		LEFT OUTER JOIN @REST E
			ON DATEDIFF(DAY, E.REST_DATE, A.DELIY_DT) = 0
			AND E.CAR_ID = A.CAR_ID
		WHERE A.DELIY_DT >= @STR_DT
		AND A.DELIY_DT &lt; @END_DT
		AND B.BIZ_CD IS NOT NULL
		AND ISNULL(E.REST_CD, 'N') = 'N'
		AND DATEDIFF(DAY, A.DELIY_DT, C.ARR_DT) = 0
		GROUP BY CAST(A.DELIY_DT AS DATE), A.CAR_ID, B.BIZ_CD, D.CENTER_CD
		;

		WITH DELI1 AS (
			SELECT
				  A.STD_DATE
				, A.CAR_ID
				, A.BIZ_CD
				, A.CENTER_CD
				, A.SHIP_CNT
				, ISNULL(B.DELI_PLAN_CNT, 0) AS DELI_PLAN_CNT
				, A.DELI_COMP_CNT
				, A.DELI_NOR_CNT
				, A.DELI_VIO_CNT
				, CONCAT(A.DELI_COMP_CNT, '/', ISNULL(B.DELI_PLAN_CNT, 0)) AS DELI_COMP_SHOW
				, IIF(DATEPART(WEEKDAY, A.STD_DATE) IN (1, 7), 'Y', 'N') AS WEEKEND_YN
			FROM @DELI_COMP A
			LEFT OUTER JOIN @DELI_PLAN B
				ON B.STD_DATE = A.STD_DATE
				AND B.CAR_ID = A.CAR_ID
				AND B.BIZ_CD = A.BIZ_CD
				AND B.CENTER_CD = A.CENTER_CD

			UNION ALL
			SELECT
				  A.STD_DATE
				, A.CAR_ID
				, A.BIZ_CD
				, A.CENTER_CD
				, 0 AS SHIP_CNT
				, A.DELI_PLAN_CNT
				, 0	AS DELI_COMP_CNT
				, 0	AS DELI_NOR_CNT
				, 0	AS DELI_VIO_CNT
				, CONCAT(0, '/', ISNULL(A.DELI_PLAN_CNT, 0)) AS DELI_COMP_SHOW
				, IIF(DATEPART(WEEKDAY, A.STD_DATE) IN (1, 7), 'Y', 'N') AS WEEKEND_YN
			FROM @DELI_PLAN A
			WHERE NOT EXISTS (
				SELECT 1
				FROM @DELI_COMP XX
				WHERE XX.STD_DATE = A.STD_DATE
				AND XX.CAR_ID = A.CAR_ID
				AND XX.BIZ_CD = A.BIZ_CD
			)
		)
		MERGE TB_CAR_STAT A
		USING DELI1 B
			ON B.STD_DATE = A.STD_DATE
			AND B.CAR_ID = A.CAR_ID
			AND B.BIZ_CD = A.BIZ_CD
			AND B.CENTER_CD = A.CENTER_CD
		WHEN NOT MATCHED THEN
			INSERT (
				  STD_DATE
				, CAR_ID
				, BIZ_CD
				, INSERT_ID
				, CENTER_CD
				, WEEKEND_YN
				, SHIP_CNT
				, DELI_PLAN_CNT
				, DELI_COMP_CNT
				, DELI_NOR_CNT
				, DELI_VIO_CNT
				, DELI_COMP_SHOW
			)
			VALUES (
				  B.STD_DATE
				, B.CAR_ID
				, B.BIZ_CD
				, 'BATCH'
				, B.CENTER_CD
				, B.WEEKEND_YN
				, B.SHIP_CNT
				, B.DELI_PLAN_CNT
				, B.DELI_COMP_CNT
				, B.DELI_NOR_CNT
				, B.DELI_VIO_CNT
				, B.DELI_COMP_SHOW
			)
		WHEN MATCHED THEN
			UPDATE SET
				  UPDATE_DT = GETDATE()
				, UPDATE_ID = 'BATCH'
				, SHIP_CNT = B.SHIP_CNT
				, DELI_PLAN_CNT = B.DELI_PLAN_CNT
				, DELI_COMP_CNT = B.DELI_COMP_CNT
				, DELI_NOR_CNT = B.DELI_NOR_CNT
				, DELI_VIO_CNT = B.DELI_VIO_CNT
				, DELI_COMP_SHOW = B.DELI_COMP_SHOW
		;
	</insert>

	<!-- 차량주행통계 등록 -->
	<insert id="carDrvStatInsert" parameterType="map">
		<include refid="carStatCte"/>
		,DRV1 AS (
			SELECT DISTINCT
				  CAST(B.DELIY_DT AS DATE) AS STD_DATE
				, A.CAR_ID
				, C.BIZ_CD
				, A.CENTER_CD
				, MIN(CASE
						WHEN D.ZONE_TYPE = '1' THEN D.START_DT
						WHEN D.ZONE_TYPE = '2' THEN ISNULL(D.ARR_DT, D.START_DT)
					  END) AS MIN_DT
				, MAX(CASE
						WHEN D.ZONE_TYPE = '2' THEN D.ARR_DT
						WHEN D.ZONE_TYPE = '3' THEN D.ARR_DT
					  END) AS MAX_DT
			FROM TB_CAR A WITH (NOLOCK)
			INNER JOIN TB_DELI B WITH (NOLOCK)
				ON B.CAR_ID = A.CAR_ID
			INNER JOIN TB_DELI_DTL C WITH(NOLOCK)
				ON C.SHIP_NO = B.SHIP_NO
			INNER JOIN TB_CAR_ZONE_IO D WITH(NOLOCK)
				ON D.SHIP_NO = C.SHIP_NO
			WHERE 1 = 1
			AND A.USE_YN = 'Y'
			AND A.CENTER_CD IS NOT NULL
			AND (A.CAR_TID LIKE '012%' OR A.RENT_YN = 'Y')
			AND A.CAR_NO IS NOT NULL
			AND B.DELIY_DT >= @STR_DT
			AND B.DELIY_DT &lt; @END_DT
			AND (
				(D.ZONE_TYPE = '1' AND DATEDIFF(DAY, B.DELIY_DT, D.START_DT) = 0)
				OR (D.ZONE_TYPE IN ('2', '3') AND DATEDIFF(DAY, B.DELIY_DT, D.ARR_DT) = 0)
			)
			GROUP BY CAST(B.DELIY_DT AS DATE), A.CAR_ID, C.BIZ_CD, A.CENTER_CD, B.SHIP_NO
		)
		, DRV2 AS (
			SELECT
				  A.STD_DATE
				, A.CAR_ID
				, A.BIZ_CD
				, A.CENTER_CD
				, SUM(DATEDIFF(SECOND, A.MIN_DT, A.MAX_DT)) AS DRV_SEC
				, SUM(ABS(C2.DAY_TOT_DIS - C1.DAY_TOT_DIS)) AS DRV_DIS
			FROM DRV1 A
			LEFT OUTER JOIN TB_CAR_HIST C1 WITH (NOLOCK)
				ON C1.CAR_ID = A.CAR_ID
				AND C1.DEV_DT = A.MIN_DT
				AND C1.LOG_DIV = 'D'
			LEFT OUTER JOIN TB_CAR_HIST C2 WITH (NOLOCK)
				ON C2.CAR_ID = A.CAR_ID
				AND C2.DEV_DT = A.MAX_DT
				AND C2.LOG_DIV = 'D'
			WHERE 1 = 1
			AND DATEDIFF(DAY, A.STD_DATE, A.MIN_DT) = 0
			AND DATEDIFF(DAY, A.STD_DATE, A.MAX_DT) = 0
			GROUP BY A.STD_DATE, A.CAR_ID, A.BIZ_CD, A.CENTER_CD
		)
		, DRV3 AS (
			SELECT
				CAST(B.DELIY_DT AS DATE) AS STD_DATE
				, A.CAR_ID
				, C.BIZ_CD
				, A.CENTER_CD
				, COUNT(DISTINCT D.ARR_DT) AS DRV_CNT
				, MAX(IIF(D.ZONE_TYPE = '2', D.START_DT, NULL)) AS LAST_AGENT_STR_DT
			FROM TB_CAR A WITH (NOLOCK)
			INNER JOIN TB_DELI B WITH (NOLOCK)
				ON B.CAR_ID = A.CAR_ID
			INNER JOIN TB_DELI_DTL C WITH(NOLOCK)
				ON C.SHIP_NO = B.SHIP_NO
			INNER JOIN TB_CAR_ZONE_IO D WITH(NOLOCK)
				ON D.SHIP_NO = C.SHIP_NO
				AND D.ZONE_TYPE = '2'
			WHERE 1 = 1
			AND A.USE_YN = 'Y'
			AND A.CENTER_CD IS NOT NULL
			AND (A.CAR_TID LIKE '012%' OR A.RENT_YN = 'Y')
			AND A.CAR_NO IS NOT NULL
			AND B.DELIY_DT >= @STR_DT
			AND B.DELIY_DT &lt; @END_DT
			AND DATEDIFF(DAY, B.DELIY_DT, D.ARR_DT) = 0
			GROUP BY CAST(B.DELIY_DT AS DATE), A.CAR_ID, C.BIZ_CD, A.CENTER_CD
		)
		, DRV4 AS (
			SELECT
				  A.STD_DATE
				, A.CAR_ID
				, A.BIZ_CD
				, A.CENTER_CD
				, B.DRV_CNT
				, A.DRV_SEC
				, A.DRV_DIS
				, B.LAST_AGENT_STR_DT
				, IIF(DATEPART(WEEKDAY, A.STD_DATE) IN (1, 7), 'Y', 'N') AS WEEKEND_YN
			FROM DRV2 A
			INNER JOIN DRV3 B
				ON B.STD_DATE = A.STD_DATE
				AND B.CAR_ID = A.CAR_ID
				AND B.BIZ_CD = A.BIZ_CD
				AND B.CENTER_CD = A.CENTER_CD
		)
		MERGE TB_CAR_STAT A
		USING DRV4 B
			ON B.STD_DATE = A.STD_DATE
			AND B.CAR_ID = A.CAR_ID
			AND B.BIZ_CD = A.BIZ_CD
			AND B.CENTER_CD = A.CENTER_CD
		WHEN NOT MATCHED THEN
			INSERT (
				  STD_DATE
				, CAR_ID
				, BIZ_CD
				, INSERT_ID
				, CENTER_CD
				, WEEKEND_YN
				, DRV_CNT
				, DRV_DIS
				, DRV_SEC
				, LAST_AGENT_STR_DT
			)
			VALUES (
				  B.STD_DATE
				, B.CAR_ID
				, B.BIZ_CD
				, 'BATCH'
				, B.CENTER_CD
				, B.WEEKEND_YN
				, B.DRV_CNT
				, IIF(B.DRV_DIS &lt;= 0, 0, B.DRV_DIS / 1000)
				, B.DRV_SEC
				, B.LAST_AGENT_STR_DT
			)
		WHEN MATCHED THEN
			UPDATE SET
				  UPDATE_DT = GETDATE()
				, UPDATE_ID = 'BATCH'
				, DRV_CNT = B.DRV_CNT
				, DRV_DIS = IIF(B.DRV_DIS &lt;= 0, 0, B.DRV_DIS / 1000)
				, DRV_SEC = B.DRV_SEC
				, LAST_AGENT_STR_DT = B.LAST_AGENT_STR_DT
		;
	</insert>

	<!-- 차량운행통계 등록 -->
	<insert id="carTotDrvStatInsert" parameterType="map">
		<include refid="carStatVariable"/>
		WITH TOT_DRV1 AS (
		    SELECT
				   CAST(BB.DEV_DT AS DATE) AS STD_DATE
				 , AA.CAR_ID
				 , AA.CENTER_CD
				 , MIN(BB.SEQ) AS MIN_SEQ
				 , MAX(BB.SEQ) AS MAX_SEQ
			FROM TB_CAR AA WITH(NOLOCK)
			INNER JOIN TB_CAR_HIST BB WITH(NOLOCK)
				ON BB.CAR_ID = AA.CAR_ID
				AND BB.TURN_YN = 'Y'
				AND BB.DEV_DT >= @STR_DT
				AND BB.DEV_DT &lt; @END_DT
				AND BB.LOG_DIV = 'D'
			WHERE 1 = 1
			AND AA.USE_YN = 'Y'
			AND AA.CENTER_CD IS NOT NULL
			GROUP BY CAST(BB.DEV_DT AS DATE), AA.CAR_ID, AA.CENTER_CD
		)
		, TOT_DRV2 AS (
			SELECT
				  A.STD_DATE
				, A.CAR_ID
				, C.BIZ_CD
				, A.CENTER_CD
				, B2.DAY_TOT_DIS / 1000 AS TOT_DIS
				, DATEDIFF(SECOND, B1.DEV_DT, B2.DEV_DT) AS TOT_SEC
				, IIF(DATEPART(WEEKDAY, A.STD_DATE) IN (1, 7), 'Y', 'N') AS WEEKEND_YN
			FROM TOT_DRV1 A
			INNER JOIN TB_CAR_HIST B1 WITH(NOLOCK)
				ON B1.SEQ = A.MIN_SEQ
			INNER JOIN TB_CAR_HIST B2 WITH(NOLOCK)
				ON B2.SEQ = A.MAX_SEQ
			CROSS JOIN (
				SELECT CD AS BIZ_CD FROM TB_CD WHERE GRP_CD = '020'
			) C
		)
		MERGE TB_CAR_STAT A
		USING TOT_DRV2 B
			ON B.STD_DATE = A.STD_DATE
			AND B.CAR_ID = A.CAR_ID
			AND B.BIZ_CD = A.BIZ_CD
			AND B.CENTER_CD = A.CENTER_CD
		WHEN NOT MATCHED THEN
			INSERT (
				  STD_DATE
				, CAR_ID
				, BIZ_CD
				, INSERT_ID
				, CENTER_CD
				, WEEKEND_YN
			)
			VALUES (
				  B.STD_DATE
				, B.CAR_ID
				, B.BIZ_CD
				, 'BATCH'
				, B.CENTER_CD
				, B.WEEKEND_YN
			)
		WHEN MATCHED THEN
			UPDATE SET
				  UPDATE_DT = GETDATE()
				, UPDATE_ID = 'BATCH'
				, TOT_DIS = B.TOT_DIS
				, TOT_SEC = B.TOT_SEC
		;
	</insert>

	<!-- 대리점차량주행통계 등록 -->
	<insert id="agentCarDrvStatInsert" parameterType="map">
		WITH AGENT_DRV1 AS (
			SELECT
				  A.STD_DATE
				, A.CAR_ID
				, 'T' AS BIZ_CD
				, A.AGENT_CD
				, IIF(DATEPART(WEEKDAY, A.STD_DATE) IN (1, 7), 'Y', 'N') AS WEEKEND_YN
				, B2.DAY_TOT_DIS AS DRV_DIS
				, DATEDIFF(SECOND, B1.DEV_DT, B2.DEV_DT) AS DRV_SEC
				, 1 AS DRV_CNT
			FROM (
				SELECT
					   CAST(BB.DEV_DT AS DATE) AS STD_DATE
					 , BB.CAR_ID
					 , AA.AGENT_CD
					 , MIN(BB.SEQ) AS MIN_SEQ
					 , MAX(BB.SEQ) AS MAX_SEQ
				FROM TB_CAR AA WITH(NOLOCK)
				INNER JOIN TB_CAR_HIST BB WITH(NOLOCK)
					ON BB.CAR_ID = AA.CAR_ID
					AND BB.DEV_DT >= CAST(GETDATE() - #{daysAgo} AS DATETIME)
					AND BB.DEV_DT &lt;= CAST(GETDATE() - 1 AS DATETIME)
					AND BB.LOG_DIV = 'D'
				WHERE AA.USE_YN = 'Y'
				AND AA.CENTER_CD IS NULL
				GROUP BY CAST(BB.DEV_DT AS DATE), BB.CAR_ID, AA.AGENT_CD
			) A
			INNER JOIN TB_CAR_HIST B1 WITH(NOLOCK)
				ON B1.SEQ = A.MIN_SEQ
			INNER JOIN TB_CAR_HIST B2 WITH(NOLOCK)
				ON B2.SEQ = A.MAX_SEQ
		)
		MERGE TB_CAR_STAT A
		USING AGENT_DRV1 B
			ON B.STD_DATE = A.STD_DATE
			AND B.CAR_ID = A.CAR_ID
			AND B.BIZ_CD = A.BIZ_CD
			AND B.AGENT_CD = A.AGENT_CD
		WHEN NOT MATCHED THEN
			INSERT (
				  STD_DATE
				, CAR_ID
				, BIZ_CD
				, INSERT_ID
				, AGENT_CD
				, WEEKEND_YN
				, DRV_CNT
				, DRV_DIS
				, DRV_SEC
			)
			VALUES (
				  B.STD_DATE
				, B.CAR_ID
				, B.BIZ_CD
				, 'BATCH'
				, B.AGENT_CD
				, B.WEEKEND_YN
				, B.DRV_CNT
				, B.DRV_DIS / 1000
				, B.DRV_SEC
			)
		WHEN MATCHED THEN
			UPDATE SET
				  UPDATE_DT = GETDATE()
				, UPDATE_ID = 'BATCH'
				, DRV_CNT = B.DRV_CNT
				, DRV_DIS = B.DRV_DIS / 1000
				, DRV_SEC = B.DRV_SEC
		;
	</insert>

	<!-- 포장재출고회수통계 삭제 -->
	<delete id="pkgAnalDelete" parameterType="map">
		DELETE FROM TB_PKG_ANAL
		WHERE STD_YM = LEFT(CONVERT(VARCHAR(6), GETDATE(), 112), 6)
	</delete>

	<!-- 포장재출고회수통계 등록 -->
	<insert id="pkgAnalInsert" parameterType="map">
		DECLARE @STD_YM VARCHAR(6) = LEFT(CONVERT(VARCHAR(6), GETDATE(), 112), 6);

		INSERT INTO TB_PKG_ANAL (
			  STD_YM
			, CAR_ID
			, PKG_CD
			, AGENT_CD
			, CENTER_CD
			, INSERT_ID
			, SAP_OUT_CNT
			, IN_CNT
			, IN_ADJ_CNT
			, IN_RT
		)
		SELECT
			  @STD_YM AS STD_YM
			, DE.CAR_ID
			, PA.PKG_CD
			, PA.AGENT_CD
			, 'BATCH'
			, MAX(DE.CENTER_CD) AS CENTER_CD
			, SUM(PA.OUT_ADJ_CNT) AS OUT_ADJ_CNT
			, SUM(PA.IN_CNT) AS IN_CNT
			, SUM(PA.IN_ADJ_CNT) AS IN_ADJ_CNT
			, IIF(SUM(PA.OUT_ADJ_CNT) = 0, 0, SUM(PA.IN_ADJ_CNT) * 100.0 / SUM(PA.OUT_ADJ_CNT)) AS IN_RT
		FROM (
			 SELECT
				  PKG_CD
				, SHIP_NO
				, AGENT_CD
				, SAP_OUT_CNT
				, ISNULL(IN_CNT, 0) AS IN_CNT
				, IIF(ISNULL(IN_ADJ_CNT, 0) > 0, ISNULL(IN_ADJ_CNT, 0), ISNULL(IN_CNT, 0)) AS IN_ADJ_CNT
				, ISNULL(OUT_CNT, 0) AS OUT_CNT
				, IIF(ISNULL(OUT_ADJ_CNT, 0) > 0, ISNULL(OUT_ADJ_CNT, 0), ISNULL(OUT_CNT, 0)) AS OUT_ADJ_CNT
			 FROM TB_PKG_AGENT WITH(NOLOCK)
		) PA
		INNER JOIN TB_DELI DE WITH(NOLOCK)
			ON PA.SHIP_NO = DE.SHIP_NO
			AND DE.SHIP_REQ_DATE BETWEEN CONCAT(@STD_YM, '01') AND CONVERT(VARCHAR, DATEADD(DAY, -1, GETDATE()), 112)
		GROUP BY DE.CAR_ID, PA.AGENT_CD, PA.PKG_CD
	</insert>

	<!-- 배송완료 처리 -->
	<update id="deliyUpdate" parameterType="map">
		UPDATE TB_DELI SET
			  DELI_YN = 'Y'
			, DELIY_DT = (
			    SELECT
					MAX(XX.DEV_DT) AS DEV_DT
				FROM TB_CAR_HIST XX WITH(NOLOCK)
				WHERE XX.CAR_ID = TB_DELI.CAR_ID
				AND DATEDIFF(DAY, XX.DEV_DT, GETDATE()) = 0
				AND XX.LOG_DIV = 'D'
			)
			, DELIY_DIV = '3'
			, UPDATE_DT = GETDATE()
			, UPDATE_ID = 'BATCH'
		WHERE SHIP_NO IN (
			SELECT DISTINCT A.SHIP_NO
			FROM TB_CAR_ZONE_IO A WITH(NOLOCK)
			INNER JOIN TB_DELI B WITH(NOLOCK)
				ON B.SHIP_NO = A.SHIP_NO
				AND B.DELI_YN = 'N'
			WHERE 1 = 1
			AND (
				(
				    A.ZONE_TYPE = '1'
					AND A.START_DT IS NOT NULL
					AND DATEDIFF(DAY, GETDATE(), B.CENTER_RDY_DT) = 0
				)
				OR (
				    A.ZONE_TYPE = '2'
				    AND DATEDIFF(DAY, GETDATE(), A.ARR_DT) = 0
				)
				OR EXISTS (
					SELECT 1
					FROM TB_DELI_DTL AA WITH(NOLOCK)
					WHERE AA.BIZ_CD = 'D'
					AND AA.IO_SAVE_YN = 'Y'
					AND AA.SHIP_NO = B.SHIP_NO
				    AND DATEDIFF(DAY, GETDATE(), AA.IO_SAVE_FIRST_DT) = 0
				)
			)
		    AND EXISTS (
		        SELECT 1
				FROM TB_DELI_DTL AA WITH(NOLOCK)
				WHERE AA.BIZ_CD = 'D'
		        AND AA.SHIP_NO = B.SHIP_NO
			)
		)
	</update>

	<!-- 차량별 운행 현황 WITH 쿼리- 대용량 엑셀 파일 생성 -->
	<sql id="carDrvRawWith">
		WITH T1 AS (
			SELECT DISTINCT
				  A.SEQ
				, (SELECT CENTER_NM FROM TB_CENTER WHERE CENTER_CD = B.CENTER_CD) AS CENTER_NM
				, B.CAR_NO
				, A.CAR_ID
				, B.DRV_NM
				, CONVERT(VARCHAR, A.DEV_DT, 112) AS DEV_DATE
				, CONVERT(VARCHAR, A.DEV_DT, 108) AS DEV_TM
				, A.JIBUN_ADDR
				, A.SPD
				, CASE
					WHEN ISNULL(A.DAY_TOT_DIS, 0) = 0 THEN ''
					WHEN A.DAY_TOT_DIS &lt; 1000 THEN CONCAT(A.DAY_TOT_DIS, 'm')
					ELSE CONCAT(CAST(A.DAY_TOT_DIS / 1000.0 AS NUMERIC(10, 1)), 'km')
				  END AS DAY_TOT_DIS
				, IIF(B.CH_CNT &lt; 1, NULL, CAST(A.CH1 / 10.0 AS NUMERIC(4, 1))) AS CH1
				, IIF(B.CH_CNT &lt; 2, NULL, CAST(A.CH2 / 10.0 AS NUMERIC(4, 1))) AS CH2
				, IIF(B.CH_CNT &lt; 3, NULL, CAST(A.CH3 / 10.0 AS NUMERIC(4, 1))) AS CH3
				, IIF(B.CH_CNT &lt; 4, NULL, CAST(A.CH4 / 10.0 AS NUMERIC(4, 1))) AS CH4
				, CASE WHEN C2.ZONE_TYPE = '2' THEN C2.SHIP_NO WHEN C3.ZONE_TYPE = '2' THEN C3.SHIP_NO END AS SHIP_NO
				, CASE WHEN C2.ZONE_TYPE = '2' THEN C2.DELI_NO WHEN C3.ZONE_TYPE = '2' THEN C3.DELI_NO END AS DELI_NO
				, CASE WHEN C2.ZONE_TYPE = '2' THEN C2.AGENT_CD WHEN C3.ZONE_TYPE = '2' THEN C3.AGENT_CD END AS AGENT_CD
				, CASE WHEN C2.ZONE_TYPE = '2' THEN E1.AGENT_NM WHEN C3.ZONE_TYPE = '2' THEN E2.AGENT_NM END AS AGENT_NM
				, CASE C2.AGENT_DELAY_YN
					WHEN 'Y' THEN CASE
									WHEN C2.AGENT_GAP_SEC &gt; 0 THEN CONCAT('지연(+', IIF(C2.AGENT_GAP_SEC &lt; 60, CONCAT(C2.AGENT_GAP_SEC, '초)'),  CONCAT(C2.AGENT_GAP_SEC / 60, '분)')))
									WHEN C2.AGENT_GAP_SEC &lt; 0 THEN CONCAT('지연(', IIF(C2.AGENT_GAP_SEC &lt; -60, CONCAT(C2.AGENT_GAP_SEC, '초)'),  CONCAT(C2.AGENT_GAP_SEC / 60, '분)')))
								  END
					WHEN 'N' THEN '정상'
				  END AS DELAY_TXT
				, F1.CD_NM AS ARR_VIO_NM
				, CASE

					WHEN D1.VIO_CNT &gt; 0 THEN '이상'
 				  END AS VIO_TXT
				, CASE

					WHEN D1.VIO_LONG_CNT &gt; 0 THEN '위반'
 				  END AS VIO_LONG_TXT
				, F2.CD_NM AS TEMP_VIO_NM
				, CASE
					WHEN C1.ZONE_TYPE = '1' THEN CONCAT('센터출발',  (SELECT IIF(AA.CENTER_RDY_DT IS NOT NULL, CONCAT('(', CONVERT(VARCHAR(8), AA.CENTER_RDY_DT, 108), ')'), '') FROM TB_DELI AA WHERE AA.SHIP_NO = C1.SHIP_NO))
					WHEN C3.ZONE_TYPE = '2' THEN CONCAT(E2.AGENT_NM, ' 출발')
					WHEN C2.ZONE_TYPE = '2' THEN CONCAT(E1.AGENT_NM, ' 도착')
					WHEN C2.ZONE_TYPE = '3' THEN '센터도착'
				  END AS EVENT
				, ISNULL(C1.ZONE_TYPE, C2.ZONE_TYPE) AS ZONE_TYPE
				, C2.DELAY_YN
				, A.ARR_VIO_CD
				, A.TEMP_VIO_CD
				, A.VIO_DESC
			FROM TB_CAR_HIST A WITH(NOLOCK)
			INNER JOIN TB_CAR B WITH(NOLOCK)
				ON B.CAR_ID = A.CAR_ID
			LEFT OUTER JOIN TB_CAR_ZONE_IO C1 WITH(NOLOCK)
				ON C1.CAR_ID = A.CAR_ID
				AND C1.START_DT = A.DEV_DT
				AND C1.ZONE_TYPE = '1'
			LEFT OUTER JOIN TB_CAR_ZONE_IO C2 WITH(NOLOCK)
				ON C2.CAR_ID = A.CAR_ID
				AND C2.ARR_DT = A.DEV_DT
				AND C2.ZONE_TYPE IN ('2', '3')
			LEFT OUTER JOIN TB_CAR_ZONE_IO C3 WITH(NOLOCK)
				ON C3.CAR_ID = A.CAR_ID
				AND C3.START_DT = A.DEV_DT
				AND C3.ZONE_TYPE = '2'
			LEFT OUTER JOIN TB_CAR_TEMP_VIO D1 WITH(NOLOCK)
				ON D1.CAR_ID = A.CAR_ID
				AND D1.DEV_DT = A.DEV_DT
				AND D1.EVT_FLAG = '1'
			LEFT OUTER JOIN TB_AGENT E1 WITH(NOLOCK)
				ON E1.AGENT_CD = C2.AGENT_CD
			LEFT OUTER JOIN TB_AGENT E2 WITH(NOLOCK)
				ON E2.AGENT_CD = C3.AGENT_CD
			LEFT OUTER JOIN TB_CD F1
				ON F1.GRP_CD = 'VIO_CD'
				AND F1.ETC1 = 'ARR'
				AND F1.CD = A.ARR_VIO_CD
			LEFT OUTER JOIN TB_CD F2
				ON F2.GRP_CD = 'VIO_CD'
				AND F2.ETC1 = 'CAR_TEMP'
				AND F2.CD = A.TEMP_VIO_CD

				INNER JOIN (
					SELECT
						  MIN(CASE WHEN A.ZONE_TYPE IN ('1', '2') THEN A.START_DT END) AS START_DT
						, MAX(CASE
								WHEN A.ZONE_TYPE = '2' THEN CASE
																WHEN A.ARR_DT IS NOT NULL AND A.START_DT IS NOT NULL THEN IIF(A.ARR_DT &gt; A.START_DT, A.ARR_DT, A.START_DT)
																ELSE ISNULL(A.ARR_DT, A.START_DT)
															END
								WHEN A.ZONE_TYPE = '3' THEN A.ARR_DT
							  END) AS ARR_DT
					FROM TB_CAR_ZONE_IO A WITH(NOLOCK)
					WHERE 1 = 1
				) G
					ON G.START_DT &lt;= A.DEV_DT
					AND G.ARR_DT &gt;= A.DEV_DT

			WHERE A.LOG_DIV IN ('D')
			AND B.CENTER_CD IS NOT NULL
			AND B.CENTER_CD = #{centerCd}
			AND A.DEV_DT &gt;= CONVERT(DATETIME, #{strDate}, 112)
			AND A.DEV_DT &lt; CONVERT(DATETIME, #{endDate}, 112) + 1
		)
	</sql>

	<!-- 차량별 운행 현황 총갯수 -->
	<select id="carDrvRawCnt" parameterType="map" resultType="int">
		<include refid="carDrvRawWith" />
		SELECT
			  COUNT(*) AS CNT
		FROM T1
	</select>

	<!-- 차량별 운행 현황 목록 -->
	<select id="carDrvRawList" parameterType="map" resultType="box">
		<include refid="carDrvRawWith" />
		SELECT T.* FROM (
			SELECT
				  ROW_NUMBER() OVER(ORDER BY T1.CAR_ID ASC, T1.DEV_DATE ASC, T1.DEV_TM ASC) AS RNUM
				, T1.*
				, '/*NO_LOG*/' AS NO_LOG
			FROM T1
		) T WHERE T.RNUM BETWEEN #{strNum} AND #{endNum}
	</select>

	<!-- 창고별 현황 WITH 쿼리- 대용량 엑셀 파일 생성 -->
	<sql id="cargoRawWith">
		WITH T1 AS (
			SELECT
				  A.SEQ
				, A.DEV_ID
				, (SELECT CENTER_NM FROM TB_CENTER WHERE CENTER_CD = B.CENTER_CD) AS CENTER_NM
				, B.DEV_NM
				, A.DEV_DT
				, CONVERT(VARCHAR, A.DEV_DT, 112) AS DEV_DATE
				, CONVERT(VARCHAR, A.DEV_DT, 108) AS DEV_TM
				, IIF(B.CH_CNT &lt; 1, NULL, CAST(A.CH1 / 10.0 AS NUMERIC(4, 1))) AS CH1
				, IIF(B.CH_CNT &lt; 2, NULL, CAST(A.CH2 / 10.0 AS NUMERIC(4, 1))) AS CH2
				, IIF(B.CH_CNT &lt; 3, NULL, CAST(A.CH3 / 10.0 AS NUMERIC(4, 1))) AS CH3
				, IIF(B.CH_CNT &lt; 4, NULL, CAST(A.CH4 / 10.0 AS NUMERIC(4, 1))) AS CH4
				, IIF(B.CH_CNT &lt; 5, NULL, CAST(A.CH5 / 10.0 AS NUMERIC(4, 1))) AS CH5
				, IIF(B.CH_CNT &lt; 6, NULL, CAST(A.CH6 / 10.0 AS NUMERIC(4, 1))) AS CH6
				, A.TEMP_VIO_CD
				, A.VIO_DESC
				, CASE
					WHEN C1.DEV_ID IS NULL AND C2.DEV_ID IS NULL THEN '정상'
					ELSE
						CONCAT(
							CASE
								WHEN C1.VIO_LONG_CNT &gt; 0 THEN '기준위반'
								WHEN C1.VIO_CNT &gt; 0 THEN '기준이상'
							END,
							IIF(
								(C1.VIO_LONG_CNT &gt; 0 OR C1.VIO_CNT &gt; 0) AND (C2.VIO_LONG_CNT &gt; 0 OR C2.VIO_CNT &gt; 0),
								' - ',
								''
							),
							CASE
								WHEN C2.VIO_LONG_CNT &gt; 0 THEN 'HACCP위반'
								WHEN C2.VIO_CNT &gt; 0 THEN 'HACCP이상'
							END
						)
					END AS TEMP_STAT
				, D.CD_NM AS TEMP_VIO_NM
			FROM TB_CARGO_HIST A WITH(NOLOCK)
				INNER JOIN TB_CARGO_DEV B WITH(NOLOCK)
					ON B.DEV_ID = A.DEV_ID
				LEFT OUTER JOIN TB_CARGO_TEMP_VIO C1 WITH(NOLOCK)
					ON C1.DEV_ID = A.DEV_ID
					AND C1.DEV_DT = A.DEV_DT
					AND C1.EVT_FLAG = '1'
				LEFT OUTER JOIN TB_CARGO_TEMP_VIO C2 WITH(NOLOCK)
					ON C2.DEV_ID = A.DEV_ID
					AND C2.DEV_DT = A.DEV_DT
					AND C2.EVT_FLAG = '2'
				LEFT OUTER JOIN TB_CD D
					ON D.GRP_CD = 'VIO_CD'
					AND D.ETC1 = 'CARGO_TEMP'
					AND D.CD = A.TEMP_VIO_CD
			WHERE B.CENTER_CD IS NOT NULL
			AND A.DEV_DT &gt;= CONVERT(DATETIME, #{strDate}, 112)
			AND A.DEV_DT &lt; CONVERT(DATETIME, #{endDate}, 112) + 1
		)
	</sql>

	<!-- 창고별 현황 총갯수 -->
	<select id="cargoRawCnt" parameterType="map" resultType="int">
		<include refid="cargoRawWith" />
		SELECT
			  COUNT(*) AS CNT
		FROM T1
	</select>

	<!-- 창고별 현황 목록 -->
	<select id="cargoRawList" parameterType="map" resultType="box">
		<include refid="cargoRawWith" />
		SELECT T.* FROM (
			SELECT
				  ROW_NUMBER() OVER(ORDER BY T1.DEV_ID ASC, T1.DEV_DATE ASC, T1.DEV_TM ASC) AS RNUM
				, T1.*
				, '/*NO_LOG*/' AS NO_LOG
			FROM T1
		) T WHERE T.RNUM BETWEEN #{strNum} AND #{endNum}
	</select>

	<!-- 대용량엑셀파일정보 등록 -->
	<insert id="csvFileInsert" parameterType="map">
		INSERT INTO TB_CSV_FILE (
			  INSERT_ID
			, STR_DATE
			, END_DATE
			, CENTER_CD
			, DIV
			, FILE_NM
			, FILE_SIZE
			, CNT
			, SAVE_FILE_NM
			, SAVE_FILE_PATH
		) VALUES (
			  'SYSTEM'
			, #{strDate}
			, #{endDate}
			, #{centerCd}
			, #{div}
			, #{fileNm}
			, #{fileSize}
			, #{cnt}
			, #{saveFileNm}
			, #{saveFilePath}
		)
	</insert>

	<!-- 대용량엑셀파일정보 삭제 -->
	<update id="csvFileDelete" parameterType="map">
		DELETE FROM TB_CSV_FILE
		WHERE STR_DATE = #{strDate}
		AND DIV = #{div}
	</update>
</mapper>

