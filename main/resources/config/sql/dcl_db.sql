--기간계 생성
CREATE TABLESPACE TS_KRMA_LEG DATAFILE '/data/tibero/krmadb/krma_leg01.dtf' SIZE 10G AUTOEXTEND ON NEXT 256M;
CREATE USER KRMA_LEG IDENTIFIED BY KRMA_LEG DEFAULT TABLESPACE TS_KRMA_LEG;
GRANT CONNECT, RESOURCE, DBA TO KRMA_LEG;

--연합회 & 서울조합
CREATE TABLESPACE TS_KRCA_LEG DATAFILE '/data/tibero/krmadb/krca_leg01.dtf' SIZE 1G AUTOEXTEND ON NEXT 256M;
CREATE USER KRCA_LEG IDENTIFIED BY KRCA_LEG DEFAULT TABLESPACE TS_KRCA_LEG;
GRANT CONNECT, RESOURCE, DBA TO KRCA_LEG;

--이미지 시스템
CREATE TABLESPACE TS_KRMA_NIMG DATAFILE '/data/tibero/krmadb/krma_nimg01.dtf' SIZE 1G AUTOEXTEND ON NEXT 256M;
CREATE USER KRMA_NIMG IDENTIFIED BY KRMA_NIMG DEFAULT TABLESPACE TS_KRMA_NIMG;
GRANT CONNECT, RESOURCE, DBA TO KRMA_NIMG;

--기간계 mig
CREATE TABLESPACE TS_MIG_KRMA_LEG DATAFILE '/data/tibero/krmadb/mig_krma_leg01.dtf' SIZE 10G AUTOEXTEND ON NEXT 256M;
CREATE USER MIG_KRMA_LEG IDENTIFIED BY MIG_KRMA_LEG DEFAULT TABLESPACE TS_MIG_KRMA_LEG;
GRANT CONNECT, RESOURCE, DBA TO MIG_KRMA_LEG;

--연합회 & 서울조합 mig
CREATE TABLESPACE TS_MIG_KRCA_LEG DATAFILE '/data/tibero/krmadb/mig_krca_leg01.dtf' SIZE 1G AUTOEXTEND ON NEXT 256M;
CREATE USER MIG_KRCA_LEG IDENTIFIED BY MIG_KRCA_LEG DEFAULT TABLESPACE TS_MIG_KRCA_LEG;
GRANT CONNECT, RESOURCE, DBA TO MIG_KRCA_LEG;

--이미지 mig
CREATE TABLESPACE TS_MIG_KRMA_NIMG DATAFILE '/data/tibero/krmadb/mig_krma_nimg01.dtf' SIZE 1G AUTOEXTEND ON NEXT 256M;
CREATE USER MIG_KRMA_NIMG IDENTIFIED BY MIG_KRMA_NIMG DEFAULT TABLESPACE TS_MIG_KRMA_NIMG;
GRANT CONNECT, RESOURCE, DBA TO MIG_KRMA_NIMG;

--모바일 키패드
CREATE TABLESPACE KRMA_KEYPAD DATAFILE '/data/tibero/krmadb/krma_keypad01.dtf' SIZE 100M AUTOEXTEND ON NEXT 128M;
CREATE USER KRMA_KEYPAD IDENTIFIED BY KRMA_KEYPAD DEFAULT TABLESPACE KRMA_KEYPAD;
GRANT CONNECT, RESOURCE TO KRMA_KEYPAD;

--tablespace 확장
ALTER TABLESPACE KRMA_LEG ADD DATAFILE '/data/tibero/krmadb/krma_leg02.dtf' SIZE 10G AUTOEXTEND ON NEXT 256M;
ALTER TABLESPACE KRMA_LEG ADD DATAFILE '/data/tibero/krmadb/krma_leg03.dtf' SIZE 10G AUTOEXTEND ON NEXT 256M;
ALTER TABLESPACE KRMA_LEG ADD DATAFILE '/data/tibero/krmadb/krma_leg04.dtf' SIZE 10G AUTOEXTEND ON NEXT 256M;
ALTER TABLESPACE KRMA_LEG ADD DATAFILE '/data/tibero/krmadb/krma_leg05.dtf' SIZE 10G AUTOEXTEND ON NEXT 256M;

ALTER TABLESPACE MIG_KRMA_LEG ADD DATAFILE '/data/tibero/krmadb/mig_krma_leg02.dtf' SIZE 10G AUTOEXTEND ON NEXT 256M;
ALTER TABLESPACE MIG_KRMA_LEG ADD DATAFILE '/data/tibero/krmadb/mig_krma_leg03.dtf' SIZE 10G AUTOEXTEND ON NEXT 256M;
ALTER TABLESPACE MIG_KRMA_LEG ADD DATAFILE '/data/tibero/krmadb/mig_krma_leg04.dtf' SIZE 10G AUTOEXTEND ON NEXT 256M;
ALTER TABLESPACE MIG_KRMA_LEG ADD DATAFILE '/data/tibero/krmadb/mig_krma_leg05.dtf' SIZE 10G AUTOEXTEND ON NEXT 256M;

--undo tablespace 생성
CREATE UNDO TABLESPACE TS_UNDO DATAFILE '/data/tibero/krmadb/undo_ts01.dtf' SIZE 10G AUTOEXTEND ON;
ALTER SYSTEM SET UNDO_TABLESPACE = 'TS_UNDO' SCOPE = BOTH;
SELECT * FROM V$PARAMETER WHERE NAME = 'undo_tablespace';

-- 시퀀스 초기화(현재 미사용)
/*
CREATE OR REPLACE PROCEDURE RESET_SEQ_CYCLE(SEQ_NAME IN VARCHAR)
IS L_VAL NUMBER;
BEGIN
	EXECUTE IMMEDIATE 'SELECT ' || SEQ_NAME || '.NEXTVAL FROM DUAL' INTO L_VAL;
	EXECUTE IMMEDIATE 'ALTER SEQUENCE ' || SEQ_NAME || ' INCREMENT BY  -' || L_VAL || ' MINVALUE 1';
	EXECUTE IMMEDIATE 'SELECT ' || SEQ_NAME || '.NEXTVAL FROM DUAL' INTO L_VAL;
	EXECUTE IMMEDIATE 'ALTER SEQUENCE ' || SEQ_NAME || ' INCREMENT BY  1 MINVALUE 1';
END;
*/

--오라클 시스템잡에 배치 등록(현재 미사용)
/*
DECLARE
	X NUMBER;
BEGIN
	SYS.DBMS_JOB.SUBMIT
	(
		  job => X
		, what =>
			'BEGIN
				RESET_SEQ_CYCLE(''SQ_TBCA0001'');
				RESET_SEQ_CYCLE(''SQ_TBCA0001_G'');
				RESET_SEQ_CYCLE(''SQ_TBCL1131'');
				RESET_SEQ_CYCLE(''SQ_TBCZ1102'');
			 END;'
		, next_date => to_date('2017-09-28 00:00:00', 'YYYY-MM-DD HH24:MI:SS')
		, interval => 'TRUNC(SYSDATE+1)'
		, no_parse => FALSE
	);
	SYS.DBMS_OUTPUT.PUT_LINE('Job Number is : ' || TO_CHAR(X));
END;

DECLARE
	X NUMBER;
BEGIN
	SYS.DBMS_JOB.SUBMIT
	(
		  job => X
		, what =>
			'BEGIN
				RESET_SEQ_CYCLE(''SQ_TBCL1101_A'');
				RESET_SEQ_CYCLE(''SQ_TBCL1101_B'');
				RESET_SEQ_CYCLE(''SQ_TBCL1101_C'');
				RESET_SEQ_CYCLE(''SQ_TBCL1101_D'');
				RESET_SEQ_CYCLE(''SQ_TBCL1101_E'');
			 END;'
		, next_date => to_date('2018-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS')
		, interval => 'ADD_MONTHS(TRUNC(SYSDATE, ''Y''), 12)'
		, no_parse => FALSE
	);
	SYS.DBMS_OUTPUT.PUT_LINE('Job Number is : ' || TO_CHAR(X));
END;
*/

CREATE MATERIALIZED VIEW CAL_EXPIRE_MV
BUILD IMMEDIATE
REFRESH FORCE
ENABLE QUERY REWRITE
AS
SELECT
		     TRUNC(B.IEND_CONT_DT ) IEND_CONT_DT
		    ,TO_CHAR(COUNT(*),'FM999,999,999') CNT
    FROM
    TBMC0001 B
   ,TBMC0004 C
   , TBMC0006 D
    WHERE 1=1

    AND NOT EXISTS(
				    SELECT 1
				    FROM TBMC0001 T1
				    , TBMC0004 T4
				    , TBMC0006 T6
				           WHERE 1=1
				             AND T1.ISTAR_CONT_DT >= B.IEND_CONT_DT --AND T1.ISTAR_CONT_DT < TRUNC(B.IEND_CONT_DT)+1
				             AND T1.CONT_STATE IN ('02','03')
				             AND T1.INS_KIND_CD = '11'
				             AND T1.VALD_END_DT = TO_DATE('99991231235959', 'YYYYMMDDHH24MISS')
				             AND T1.DEL_AT = '0'
				             AND T4.POL_NO = T1.POL_NO
				             AND T4.CUST_NO = C.CUST_NO
				             AND T4.VALD_END_DT = TO_DATE('99991231235959', 'YYYYMMDDHH24MISS')
				             AND T4.PRN_GB_CD = '01'
				             AND T4.DEL_AT = '0'
				             AND T6.POL_NO = T1.POL_NO
				             AND T6.CAR_SEQ = D.CAR_SEQ
				             AND T6.VALD_END_DT = TO_DATE('99991231235959', 'YYYYMMDDHH24MISS')
				             AND T6.DEL_AT = '0'
    )

    AND B.INS_KIND_CD = '11'
--    AND B.IEND_CONT_DT BETWEEN TO_DATE('201701' ||'01'||'000000', 'YYYYMMDDHH24MISS') AND TO_DATE(TO_CHAR(LAST_DAY('201701'|| '01'), 'YYYYMMDD') || '235959', 'YYYYMMDDHH24MISS')
    AND B.CONT_STATE IN ('02','03')
    AND B.VALD_END_DT = TO_DATE('99991231235959', 'YYYYMMDDHH24MISS')
    AND B.DEL_AT = '0'
    AND C.POL_NO = B.POL_NO
    AND C.VALD_END_DT = TO_DATE('99991231235959', 'YYYYMMDDHH24MISS')
    AND C.PRN_GB_CD = '01'
    AND C.DEL_AT = '0'
    AND D.POL_NO = C.POL_NO
    AND D.VALD_END_DT = TO_DATE('99991231235959', 'YYYYMMDDHH24MISS')
    AND D.DEL_AT = '0'
    GROUP BY TRUNC(B.IEND_CONT_DT)
    ORDER BY TRUNC(B.IEND_CONT_DT)

    ;